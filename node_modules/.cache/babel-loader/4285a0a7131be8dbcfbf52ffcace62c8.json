{"ast":null,"code":"import _slicedToArray from \"/Users/garrett.palmeri/Downloads/dv01FrontendChallenge202103/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/garrett.palmeri/Downloads/dv01FrontendChallenge202103/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport useCSV from './request/useCSV';\n\nfunction App() {\n  var initialFilterState = {\n    homeOwnership: '',\n    quarter: '',\n    term: '',\n    year: ''\n  };\n\n  var _useState = useState(initialFilterState),\n      _useState2 = _slicedToArray(_useState, 2),\n      filters = _useState2[0],\n      setFilters = _useState2[1];\n\n  var aggregate = function aggregate(data) {\n    console.log({\n      dataInFunction: data\n    });\n    var aggregateData = data.reduce(function (totals, item) {\n      var grade = item.grade,\n          currentBalance = item.currentBalance,\n          homeOwnership = item.homeOwnership,\n          quarter = item.quarter,\n          term = item.term,\n          year = item.year;\n      totals[grade] = (totals[grade] || 0) + parseFloat(currentBalance);\n      return totals;\n    }, {});\n    return aggregateData;\n  };\n\n  var data = aggregate(useCSV());\n  console.log({\n    data: data\n  }); // aggregate(data);\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"HELLO WORLD\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"CHARTS AND GRAPHS\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/garrett.palmeri/Downloads/dv01FrontendChallenge202103/src/App.js"],"names":["React","useState","useCSV","App","initialFilterState","homeOwnership","quarter","term","year","filters","setFilters","aggregate","data","console","log","dataInFunction","aggregateData","reduce","totals","item","grade","currentBalance","parseFloat"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,SAASC,GAAT,GAAe;AACb,MAAMC,kBAAkB,GAAG;AACzBC,IAAAA,aAAa,EAAE,EADU;AAEzBC,IAAAA,OAAO,EAAE,EAFgB;AAGzBC,IAAAA,IAAI,EAAG,EAHkB;AAIzBC,IAAAA,IAAI,EAAE;AAJmB,GAA3B;;AADa,kBAQiBP,QAAQ,CAACG,kBAAD,CARzB;AAAA;AAAA,MAQNK,OARM;AAAA,MAQGC,UARH;;AASb,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAU;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACC,MAAAA,cAAc,EAAEH;AAAjB,KAAZ;AACA,QAAMI,aAAa,GAAGJ,IAAI,CAACK,MAAL,CAAY,UAACC,MAAD,EAASC,IAAT,EAAkB;AAAA,UAC1CC,KAD0C,GACmBD,IADnB,CAC1CC,KAD0C;AAAA,UACnCC,cADmC,GACmBF,IADnB,CACnCE,cADmC;AAAA,UACnBhB,aADmB,GACmBc,IADnB,CACnBd,aADmB;AAAA,UACJC,OADI,GACmBa,IADnB,CACJb,OADI;AAAA,UACKC,IADL,GACmBY,IADnB,CACKZ,IADL;AAAA,UACWC,IADX,GACmBW,IADnB,CACWX,IADX;AAElDU,MAAAA,MAAM,CAACE,KAAD,CAAN,GAAgB,CAACF,MAAM,CAACE,KAAD,CAAN,IAAiB,CAAlB,IAAuBE,UAAU,CAACD,cAAD,CAAjD;AACA,aAAOH,MAAP;AACD,KAJqB,EAInB,EAJmB,CAAtB;AAKA,WAAOF,aAAP;AACD,GARD;;AASA,MAAMJ,IAAI,GAAGD,SAAS,CAACT,MAAM,EAAP,CAAtB;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,IAAAA,IAAI,EAAJA;AAAD,GAAZ,EAnBa,CAsBb;;AACA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,CADF;AAMD;;AAED,eAAeT,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport './App.css'\nimport useCSV from './request/useCSV';\n\nfunction App (){\n  const initialFilterState = {\n    homeOwnership: '',\n    quarter: '',\n    term:  '',\n    year: ''\n  };\n\n  const [filters, setFilters] = useState(initialFilterState);\n  const aggregate = (data) => {\n    console.log({dataInFunction: data});\n    const aggregateData = data.reduce((totals, item) => {\n      const { grade, currentBalance, homeOwnership, quarter, term, year} = item;\n      totals[grade] = (totals[grade] || 0) + parseFloat(currentBalance);\n      return totals;\n    }, {});\n    return aggregateData;\n  };\n  const data = aggregate(useCSV());\n  console.log({data});\n\n\n  // aggregate(data);\n  return (\n    <div className='App'>\n      <p>HELLO WORLD</p>\n      <p>CHARTS AND GRAPHS</p>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}